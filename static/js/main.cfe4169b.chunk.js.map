{"version":3,"sources":["constants/data.js","utils.js","appSlice.js","store.js","components/CheckedVegCounts.js","components/ShopCount.js","components/Save.js","components/Menu.js","components/Header.js","components/VegStackAlphaFilter.js","components/VegetableStack.js","components/MoneyStack.js","components/MeasureStack.js","components/InputRange.js","components/Footer.js","components/Table/EnhancedTableHead.js","components/Table/EnhancedTableToolbar.js","components/Table/EnhancedTable.js","components/SelectedVeg.js","components/Body.js","components/Appcontainer.js","App.js","index.js"],"names":["moneyData","measureData","descendingComparator","a","b","orderBy","svKey","storeSelectedVegetables","data","localStorage","setItem","JSON","stringify","e","alert","checkboxMsRsInit","id","type","value","appSlice","createSlice","name","initialState","vegetables","Object","toConsumableArray","vegStack","selectedVegetables","elseData","storedData","getItem","parse","getSelectedVegetables","checkboxMsRs","shopCount","vegStackFilterAlphaValue","reducers","addVegetable","state","action","concat","objectSpread","payload","ms","rs","rstt","shop","selected","setVegStack","updatedVeg","map","vegs","rgb","Math","round","random","textColour","parseInt","backgroundColour","getRandomColor","updateMeasureCheckBox","stateValue","_action$payload","updateRsCheckBox","_action$payload2","updateRsTtCheckBox","_action$payload3","updateMsRsvalue","_action$payload4","key","_action$payload4$upda","updateWhole","sVegs","defineProperty","toLowerCase","selectedVegToggleChecked","_action$payload5","selectedVegAllToggleChecked","deleteSelectedVeg","filter","plusORminusShopCount","selectedVegChangeShopCount","selectedVegUpdateRupees","ceil","updateVegStackFilter","actions","configureStore","reducer","app","appReducer","CheckedVegCounts","useSelector","_useState","useState","Items","Measure","Rupees","_useState2","slicedToArray","displayData","setDisplayData","useEffect","length","totalItems","msTotal","rsTotal","_ref","react_default","createElement","className","colSpan","align","ShopCount","dispatch","useDispatch","Typography","variant","gutterBottom","IconButton","color","size","onClick","RemoveCircleOutlined_default","fontSize","style","ControlPointOutlined_default","Save","_ref$onlySaveIcon","onlySaveIcon","Fragment","Save_default","Button","startIcon","window","confirm","removeItem","DeleteForever_default","Menu","menuToggle","setMenuToggle","onClickHandler","aria-label","MenuOutlined_default","Drawer","anchor","open","onClose","Box","sx","width","components_CheckedVegCounts","components_ShopCount","components_Save","Header","components_Menu","VegStackAlphaFilter","fullWidth","Stack","direction","spacing","datas","firstLetters","dt","charAt","Set","getAlphaFilter","fValue","Chip","handleClick","label","VegetableStack","filterValue","vegetable","isSelectedVeg","some","sv","backgroundColor","border","disabled","MoneyStack","money","MeasureStack","measure","InputRange","irType","max","step","_ref$exValue","exValue","_React$useState","React","_React$useState2","inpRgVal","setInpRgVal","min","onInput","Number","target","Footer","rangerCheckbox","setRangerCheckbox","components_VegStackAlphaFilter","Checkbox","event","checked","components_VegetableStack","components_MoneyStack","components_InputRange","components_MeasureStack","EnhancedTableHead","props","onSelectAllClick","order","numSelected","rowCount","onRequestSort","headCells","react","TableHead","TableRow","TableCell","padding","indeterminate","onChange","inputProps","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","hideSortIcon","component","visuallyHidden","EnhancedTableToolbar","Toolbar","pl","sm","pr","xs","bgcolor","theme","alpha","palette","error","main","activatedOpacity","boxShadow","minHeight","PlaylistAddCheck_default","margin","Scale_default","CurrencyRupee_default","paddingRight","ArrowCircleLeft_default","ArrowCircleRight_default","Delete_default","EnhancedTable","rows","setOrder","_React$useState3","_React$useState4","setOrderBy","rowD","Paper","mb","Table_EnhancedTableToolbar","TableContainer","Table","minWidth","aria-labelledby","Table_EnhancedTableHead","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","row","isItemSelected","isItemSelected2","isItemSelected3","isItemSelected4","labelId","hover","role","aria-checked","tabIndex","scope","vals","ShoppingBag_default","Storefront_default","SelectedVeg","Table_EnhancedTable","Body","components_SelectedVeg","Appcontainer","CssBaseline","Container","fixed","components_Header","components_Body","components_Footer","FixedContainer","es","store","components_Appcontainer","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.cfe4169b.chunk.js","sourcesContent":["export const vegData = [\n  {\n    \"id\": \"632ef03d20575fc23786831a\",\n    \"value\": \"Avarakka\"\n  },\n  {\n    \"id\": \"632ef03da6b833d543372bb1\",\n    \"value\": \"Beans\"\n  },\n  {\n    \"id\": \"632ef03dbe88e165308ae1f9\",\n    \"value\": \"Brinjal\"\n  },\n  {\n    \"id\": \"632ef03d7880f640c3883353\",\n    \"value\": \"Carrot\"\n  },\n  {\n    \"id\": \"632ef03d51779efdfc16a455\",\n    \"value\": \"Chilly\"\n  },\n  {\n    \"id\": \"632ef03d2a0c43086aafbcbc\",\n    \"value\": \"ChowChow\"\n  },\n  {\n    \"id\": \"632ef03d544aa8b99690736e\",\n    \"value\": \"Coconut\"\n  },\n  {\n    \"id\": \"632ef03d7a7970e7caba8595\",\n    \"value\": \"Coriander Leaf\"\n  },\n  {\n    \"id\": \"632ef03d350cd1c434925ff5\",\n    \"value\": \"Curry Leaf\"\n  },\n  {\n    \"id\": \"632ef03d4a1d76e9155aeafb\",\n    \"value\": \"Drum Stick\"\n  },\n  {\n    \"id\": \"632ef03d4660e1fcecd3a0f3\",\n    \"value\": \"Garlic\"\n  },\n  {\n    \"id\": \"632ef03d2ea24cb63064a495\",\n    \"value\": \"Garlic - Peeled\"\n  },\n  {\n    \"id\": \"632ef03d1c5445caec6c50b6\",\n    \"value\": \"Ginger\"\n  },\n  {\n    \"id\": \"632ef03d430c47bfb8480fc5\",\n    \"value\": \"Karunai Kilangu\"\n  },\n  {\n    \"id\": \"632ef03d3bd6ee17d26cfb4f\",\n    \"value\": \"Kovakka\"\n  },\n  {\n    \"id\": \"632ef03df102afbda1a6096f\",\n    \"value\": \"Mango\"\n  },\n  {\n    \"id\": \"632ef03d6bb696bdabe68365\",\n    \"value\": \"Nukal\"\n  },\n  {\n    \"id\": \"632ef03d8a892ff280e7be4f\",\n    \"value\": \"Ladies Finger\"\n  },\n  {\n    \"id\": \"632ef03d0471fb2584933732\",\n    \"value\": \"Onion\"\n  },\n  {\n    \"id\": \"632ef03d25690ca0c1ab5fc3\",\n    \"value\": \"Potato\"\n  },\n  {\n    \"id\": \"632ef03d849be4ce1b44cb72\",\n    \"value\": \"Pundina Leaf\"\n  },\n  {\n    \"id\": \"632ef03dde47879dee286eaf\",\n    \"value\": \"Pumpkin - Yellow\"\n  },\n  {\n    \"id\": \"632ef03de12228d331def77c\",\n    \"value\": \"Radish\"\n  },\n  {\n    \"id\": \"632ef03d0091d964df7b6aaa\",\n    \"value\": \"Raw Banana\"\n  },\n  {\n    \"id\": \"632ef03d8dd37725b7416fc4\",\n    \"value\": \"Ridge Gourd\"\n  },\n  {\n    \"id\": \"632ef03d0e8ad5f9b427ab70\",\n    \"value\": \"Sambarkai\"\n  },\n  {\n    \"id\": \"632ef03df96379340063c4f5\",\n    \"value\": \"Sorakka\"\n  },\n  {\n    \"id\": \"632ef03db0e79de78ee65210\",\n    \"value\": \"Tomato\"\n  },\n  {\n    \"id\": \"632ef03d5a840a33959af7d3\",\n    \"value\": \"Tomato - Nati\"\n  },\n  {\n    \"id\": \"633475b2cee39b6dd7826fb0\",\n    \"value\": \"Other 1\"\n  },\n  {\n    \"id\": \"633475b2bcfdb0e3a721bafb\",\n    \"value\": \"Other 2\"\n  },\n  {\n    \"id\": \"633475b204a8a986f116d95a\",\n    \"value\": \"Other 3\"\n  }\n]\n\nexport const moneyData = [\n  0,\n  1,\n  2,\n  5,\n  10,\n  20,\n  50,\n  100,\n  200,\n  500\n]\n\nexport const measureData = [\n  0,\n  .5,\n  1,\n  2,\n  2.5,\n  3,\n  5,\n  10\n]","export const getRandomColor = () => {\n  const rgb = [255, 0, 0];\n  rgb[0] = Math.round(Math.random() * 255);\n  rgb[1] = Math.round(Math.random() * 255);\n  rgb[2] = Math.round(Math.random() * 255);\n\n  // http://www.w3.org/TR/AERT#color-contrast\n  const brightness = Math.round(((parseInt(rgb[0]) * 299) +\n                      (parseInt(rgb[1]) * 587) +\n                      (parseInt(rgb[2]) * 114)) / 1000);\n  const textColour = (brightness > 125) ? 'black' : 'white';\n  const backgroundColour = 'rgb(' + rgb[0] + ',' + rgb[1] + ',' + rgb[2] + ')';\n  return {\n    textColour,\n    backgroundColour\n  }\n}\n\nexport function descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport const checkBoxhandleClicks = (id, checkboxState) => {\n  const [ selectedState, selectedSetState ] = checkboxState;\n  const selectedIndex = selectedState.indexOf(id);\n  let newSelected = [];\n\n  if (selectedIndex === -1) {\n    newSelected = newSelected.concat(selectedState, id);\n  } else if (selectedIndex === 0) {\n    newSelected = newSelected.concat(selectedState.slice(1));\n  } else if (selectedIndex === selectedState.length - 1) {\n    newSelected = newSelected.concat(selectedState.slice(0, -1));\n  } else if (selectedIndex > 0) {\n    newSelected = newSelected.concat(\n      selectedState.slice(0, selectedIndex),\n      selectedState.slice(selectedIndex + 1),\n    );\n  }\n\n  selectedSetState(newSelected);\n}\n\nexport const findAndUpdate = (vegs, id, key, newValue, addWithExistingValue) => {\n  return vegs.map((veg) => {\n    console.log(\"veg\", veg)\n    if(veg.id === id) {\n      return {\n        ...veg,\n        [key]: addWithExistingValue ? (veg[key] + newValue) : newValue\n      }\n    } else {\n      return veg;\n    }\n  })\n}\n\nexport const filterByFirstLetter = (datas, filterValue) => (\n  filterValue.toLowerCase() !== \"all\" ? datas.filter((dt) => (dt.value.charAt(0).toLowerCase() === filterValue.toLowerCase())) : [...datas]\n)\n\nexport const getAlphaFilter = (datas) => {\n  const firstLetters = datas.map((dt) => (dt.value.charAt(0)));\n  return [\"All\", ...new Set(firstLetters)]\n}\n\nconst svKey = \"RMK-SELECTED-VEGETABLES\";\nexport const storeSelectedVegetables = (data) => {\n  try {\n    localStorage.setItem(svKey, JSON.stringify(data));\n  } catch(e) {\n    alert(\"Data not stored on Local storage\");\n  }\n}\n\nexport const getSelectedVegetables = (elseData) => {\n  const storedData = localStorage.getItem(svKey);\n  return storedData ? JSON.parse(storedData) : elseData;\n}\n\nexport const clearSelectedVegetables = () => {\n  localStorage.removeItem(svKey);\n}","import { createSlice } from '@reduxjs/toolkit';\n\nimport { vegData } from './constants/data';\nimport { getRandomColor, getSelectedVegetables } from './utils';\n\nconst checkboxMsRsInit = { id: null, type: null, value: 0 };\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState: {\n    value: 0,\n    vegetables: [\n      ...vegData\n    ],\n    vegStack: [],\n    selectedVegetables: getSelectedVegetables([]),\n    checkboxMsRs: checkboxMsRsInit,\n    shopCount: 0,\n    vegStackFilterAlphaValue: \"All\"\n  },\n  reducers: {\n    addVegetable: (state, action) => {\n      state.selectedVegetables = [\n        ...state.selectedVegetables,\n        {\n          ...action.payload,\n          ms: 0,\n          rs: 0,\n          rstt: 0,\n          shop: state.shopCount,\n          selected: false\n        }\n      ]\n    },\n    setVegStack: (state) => {\n      const updatedVeg = state.vegetables.map((vegs) => ({\n        ...vegs,\n        ...getRandomColor()\n      }))\n      state.vegStack = [ ...updatedVeg ];\n    },\n    updateMeasureCheckBox: (state, action) => {\n      let stateValue = checkboxMsRsInit;\n      const {id, value} = action.payload;\n      if(id) {\n        stateValue = {\n          id,\n          type: \"MS\",\n          value\n        }\n      }\n      state.checkboxMsRs = stateValue;\n    },\n    updateRsCheckBox: (state, action) => {\n      let stateValue = checkboxMsRsInit;\n      const {id, value} = action.payload;\n      if(id) {\n        stateValue = {\n          id,\n          type: \"RS\",\n          value\n        }\n      }\n      state.checkboxMsRs = stateValue;\n    },\n    updateRsTtCheckBox: (state, action) => {\n      let stateValue = checkboxMsRsInit;\n      const {id, value} = action.payload;\n      if(id) {\n        stateValue = {\n          id,\n          type: \"RSTT\",\n          value\n        }\n      }\n      state.checkboxMsRs = stateValue;\n    },\n    updateMsRsvalue: (state, action) => {\n      const { value, id, type: key, updateWhole = false} = action.payload;\n      state.selectedVegetables = state.selectedVegetables.map((sVegs) => (\n        (id === sVegs.id) ? {\n          ...sVegs,\n          [key.toLowerCase()]: value > 0 ? \n            (!updateWhole ? (sVegs[key.toLowerCase()] + value) : value)\n          : 0\n        } : sVegs\n      ))\n    },\n    selectedVegToggleChecked: (state, action) => {\n      const { id, selected } = action.payload;\n      state.selectedVegetables = state.selectedVegetables.map((sVegs) => (\n        (id === sVegs.id) ? {\n          ...sVegs,\n          selected\n        } : sVegs\n      ))\n    },\n    selectedVegAllToggleChecked: (state, action) => {\n      const selected = action.payload;\n      state.selectedVegetables = state.selectedVegetables.map((sVegs) => (\n        {\n          ...sVegs,\n          selected\n        }\n      ))\n    },\n    deleteSelectedVeg: (state) => {\n      state.selectedVegetables = state.selectedVegetables.filter((sVegs) => !sVegs.selected)\n    },\n    plusORminusShopCount: (state, action) => {\n      state.shopCount = action.payload === \"plus\" ? state.shopCount+=1 : state.shopCount-=1\n    },\n    selectedVegChangeShopCount: (state, action) => {\n      state.selectedVegetables = state.selectedVegetables.map((sVegs) => (\n        (sVegs.selected) ? {\n          ...sVegs,\n          shop: action.payload === \"plus\" ? sVegs.shop + 1 : ((sVegs.shop - 1 <= 0) ? 0 : sVegs.shop - 1)\n        } : sVegs\n      ))\n    },\n    selectedVegUpdateRupees: (state, action) => {\n      const key = action.payload === \"total\" ? \"rstt\" : \"rs\";\n      state.selectedVegetables = state.selectedVegetables.map((sVegs) => (\n        (sVegs.selected) ? {\n          ...sVegs,\n          [key]: action.payload === \"total\" ? (sVegs.ms * sVegs.rs) : Math.ceil(sVegs.rstt / sVegs.ms)\n        } : sVegs\n      ))\n    },\n    updateVegStackFilter: (state, action) => {\n      state.vegStackFilterAlphaValue = action.payload;\n    }\n  },\n})\n\nexport const { \n  addVegetable, setVegStack, updateMeasureCheckBox, updateRsCheckBox, updateMsRsvalue,\n  selectedVegToggleChecked, selectedVegAllToggleChecked, deleteSelectedVeg, plusORminusShopCount,\n  selectedVegChangeShopCount, updateVegStackFilter, updateRsTtCheckBox, selectedVegUpdateRupees\n} = appSlice.actions;\n\nexport default appSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\nimport appReducer from './appSlice';\n\nexport default configureStore({\n  reducer: {\n    app: appReducer\n  }\n})","import React, { useEffect, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nconst CheckedVegCounts = () => {\n  const selectedVegetables = useSelector((state) => state.app.selectedVegetables);\n  const [displayData, setDisplayData] = useState({\"Items\": 0, \"Measure\": 0, \"Rupees\": 0});\n\n  useEffect(() => {\n    if(selectedVegetables.length > 0) {\n      let totalItems = 0;\n      let msTotal = 0;\n      let rsTotal = 0;\n      selectedVegetables.map(({selected, ms, rstt}) => {\n        if(selected) {\n          totalItems += 1;\n          msTotal += ms;\n          rsTotal += rstt;\n        }\n      })\n      setDisplayData({\"Items\": totalItems, \"Measure\": msTotal, \"Rupees\": rsTotal})\n    }\n  },[selectedVegetables])\n\n  return (\n    <div className=\"checkedVegCounts flexCenter\">\n      <table>\n        <thead>\n          <tr>\n            <th colSpan={2}>Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Items</td>\n            <td align=\"center\">{displayData.Items}</td>\n          </tr>\n          <tr>\n            <td>Measure <small>(KG/G)</small></td>\n            <td align=\"center\">{displayData.Measure}</td>\n          </tr>\n          <tr>\n            <td>Rupees</td>\n            <td align=\"center\">Rs.{displayData.Rupees}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default CheckedVegCounts;","import React, { useEffect, useState } from 'react';\n\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport ControlPointOutlinedIcon from '@mui/icons-material/ControlPointOutlined';\nimport RemoveCircleOutlinedIcon from '@mui/icons-material/RemoveCircleOutlined';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { plusORminusShopCount } from '../appSlice';\n\nconst ShopCount = () => {\n  const shopCount = useSelector((state) => state.app.shopCount);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"shopCount flexCenter\">\n      <Typography variant=\"caption\" gutterBottom>\n        Shop Count : \n      </Typography>\n      <IconButton color=\"primary\" size=\"large\" onClick={() => shopCount>0&&(dispatch(plusORminusShopCount(\"minus\")))}>\n        <RemoveCircleOutlinedIcon fontSize=\"large\"/>\n      </IconButton>\n      <div style={{fontSize: '36px'}}>\n        {shopCount}\n      </div>\n      <IconButton color=\"primary\" size=\"large\" onClick={() => dispatch(plusORminusShopCount(\"plus\"))}>\n        <ControlPointOutlinedIcon fontSize=\"large\"/>\n      </IconButton>\n    </div>\n  )\n}\n\nexport default ShopCount;","import React, { useEffect, useState } from 'react';\n\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n\nimport { useSelector } from 'react-redux';\n\nimport { storeSelectedVegetables, clearSelectedVegetables } from '../utils';\n\nconst Save = ({onlySaveIcon = false}) => {\n  const selectedVegetables = useSelector((state) => state.app.selectedVegetables);\n\n  return (\n    <>\n      {\n        onlySaveIcon ? (\n          <IconButton color=\"primary\" style={{fontSize:\"16px\"}}>\n            <SaveIcon fontSize=\"\" onClick={() => {\n              storeSelectedVegetables(selectedVegetables)\n            }}/>\n          </IconButton>\n        ) : (\n          <div className=\"save flexCenter\">\n            <Button color=\"primary\" size=\"large\" onClick={() => storeSelectedVegetables(selectedVegetables)} startIcon={<SaveIcon />}>\n              Save\n            </Button>\n            <Button color=\"error\" size=\"large\" onClick={() => {\n              const confirmed = window.confirm(\"Are you sure ?\");\n              if(confirmed) {\n                clearSelectedVegetables()\n              }\n            }} startIcon={<DeleteForeverIcon />}>\n              Clear\n            </Button>\n          </div>\n        )\n      }\n    </>\n  )\n}\n\nexport default Save;","import React, { useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport MenuOutlinedIcon from '@mui/icons-material/MenuOutlined';\nimport Drawer from '@mui/material/Drawer';\n\nimport CheckedVegCounts from './CheckedVegCounts';\nimport ShopCount from './ShopCount';\nimport Save from './Save';\n\nconst Menu = () => {\n  const [menuToggle, setMenuToggle] = useState(false);\n\n  const onClickHandler = () => {\n    setMenuToggle(!menuToggle)\n  }\n\n  return (\n    <>\n      <div className=\"menu flexCenter\">\n        <IconButton aria-label=\"delete\" size=\"small\" onClick={onClickHandler}>\n          <MenuOutlinedIcon/>\n        </IconButton>\n      </div>\n      <Drawer\n        anchor=\"right\"\n        open={menuToggle}\n        onClose={onClickHandler}\n      >\n        <Box sx={{ width: \"70vw\" }}>\n          <CheckedVegCounts/>\n          <ShopCount/>\n          <Save/>\n        </Box>\n      </Drawer>\n    </>\n  )\n}\n\nexport default Menu;","import React from 'react';\n\nimport Menu from './Menu';\n\nconst Header = () => {\n  return (\n    // <div className=\"header flexCenter\">\n      <Menu/>\n    // </div>\n  )\n}\n\nexport default Header;","import React from 'react';\n\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { updateVegStackFilter } from '../appSlice';\nimport { getAlphaFilter } from '../utils';\n\nconst VegStackAlphaFilter = ({fullWidth}) => {\n  const vegStack = useSelector((state) => state.app.vegStack);\n  // const selectedVegetables = useSelector((state) => state.app.selectedVegetables);\n  const dispatch = useDispatch();\n\n  const handleClick = (fValue) => {\n    dispatch(\n      updateVegStackFilter(fValue)\n    )\n  }\n\n  return (\n    <div className={fullWidth ? `vegStackAlphaFilter overflowY fullWidth` : `vegStackAlphaFilter overflowY`}>\n      <Stack direction=\"row\" spacing={1}>\n        {\n          vegStack && (\n            getAlphaFilter(vegStack).map((fValue, key) => {\n              return (\n                <Chip\n                  key={fValue}\n                  variant=\"filled\"\n                  size=\"small\"\n                  color={(key+1)%2 === 0 ? \"primary\" : \"info\"}\n                  onClick={() => handleClick(fValue)}\n                  label={fValue}\n                />\n              )\n            })\n          )\n        }\n      </Stack>\n    </div>\n  )\n}\n\nexport default VegStackAlphaFilter;","import React from 'react';\n\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addVegetable } from '../appSlice';\nimport { filterByFirstLetter } from '../utils';\n\nconst VegetableStack = () => {\n  const vegStack = useSelector((state) => state.app.vegStack);\n  const selectedVegetables = useSelector((state) => state.app.selectedVegetables);\n  const vegStackFilterAlphaValue = useSelector((state) => state.app.vegStackFilterAlphaValue);\n  const dispatch = useDispatch();\n\n  const handleClick = (veg) => {\n    dispatch(\n      addVegetable(veg)\n    )\n  }\n\n  return (\n    <div className=\"vegetableStack overflowY\">\n      <Stack direction=\"row\" spacing={1}>\n        {\n          vegStack && (\n            filterByFirstLetter(vegStack, vegStackFilterAlphaValue).map((vegetable) => {\n              const { id, value, textColour, backgroundColour } = vegetable;\n              const isSelectedVeg = selectedVegetables.some((sv) => sv.id === id);\n              return (\n                <Chip \n                  sx={{\n                    backgroundColor: isSelectedVeg ? 'none' : backgroundColour,\n                    color: isSelectedVeg ? '#222222' : textColour,\n                    border: isSelectedVeg ? '1px solid #222222' : 'none',\n                    // display: isSelectedVeg ? \"none\" : null\n                  }}\n                  variant={isSelectedVeg ? \"outlined\" : \"filled\"}\n                  onClick={() => handleClick(vegetable)}\n                  label={value}\n                  disabled={isSelectedVeg}\n                />\n              )\n            })\n          )\n        }\n      </Stack>\n    </div>\n  )\n}\n\nexport default VegetableStack;","import React from 'react';\n\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { updateMsRsvalue } from '../appSlice';\nimport { moneyData } from '../constants/data';\n\nconst MoneyStack = () => {\n  const checkboxMsRs = useSelector((state) => state.app.checkboxMsRs);\n  const dispatch = useDispatch();\n\n  const handleClick = (money) => {\n    const { type, id } = checkboxMsRs;\n    dispatch(\n      updateMsRsvalue({\n        value: money,\n        type,\n        id: type === \"RS\" || type === \"RSTT\" ? id : null\n      })\n    )\n  }\n\n  return (\n    <div className=\"moneyStack overflowY\">\n      <Stack direction=\"row\" spacing={1}>\n        {\n          moneyData && (\n            moneyData.map((money) => (\n              <Chip \n                sx={{\n                  // backgroundColor: isSelectedVeg ? 'none' : backgroundColour,\n                  // color: isSelectedVeg ? '#222222' : textColour,\n                  border: '1px solid #222222',\n                  // display: isSelectedVeg ? \"none\" : null\n                }}\n                // variant={isSelectedVeg ? \"outlined\" : \"filled\"}\n                variant=\"outlined\"\n                onClick={() => handleClick(money)}\n                label={`+${money}`}\n                // disabled={isSelectedVeg}\n              />\n            ))\n          )\n        }\n      </Stack>\n    </div>\n  )\n}\n\nexport default MoneyStack;","import React from 'react';\n\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { updateMsRsvalue } from '../appSlice';\nimport { measureData } from '../constants/data';\n\nconst MeasureStack = () => {\n  // const vegStack = useSelector((state) => state.app.vegStack);\n  // const selectedVegetables = useSelector((state) => state.app.selectedVegetables);\n  // const dispatch = useDispatch();\n\n  const checkboxMsRs = useSelector((state) => state.app.checkboxMsRs);\n  const dispatch = useDispatch();\n\n  const handleClick = (measure) => {\n    const { type, id } = checkboxMsRs;\n    dispatch(\n      updateMsRsvalue({\n        value: measure,\n        type,\n        id: type === \"MS\" ? id : null\n      })\n    )\n  }\n\n  return (\n    <div className=\"measureStack overflowY\">\n      <Stack direction=\"row\" spacing={1}>\n        {\n          measureData && (\n            measureData.map((measure) => (\n              <Chip \n                sx={{\n                  // backgroundColor: isSelectedVeg ? 'none' : backgroundColour,\n                  // color: isSelectedVeg ? '#222222' : textColour,\n                  border: '1px solid #222222',\n                  // display: isSelectedVeg ? \"none\" : null\n                }}\n                // variant={isSelectedVeg ? \"outlined\" : \"filled\"}\n                variant=\"outlined\"\n                onClick={() => handleClick(measure)}\n                label={`+${measure}`}\n                // disabled={isSelectedVeg}\n              />\n            ))\n          )\n        }\n      </Stack>\n    </div>\n  )\n}\n\nexport default MeasureStack;","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { updateMsRsvalue } from '../appSlice';\n\nconst InputRange = ({type: irType, max, step, exValue = 0}) => {\n  const checkboxMsRs = useSelector((state) => state.app.checkboxMsRs);\n  const dispatch = useDispatch();\n  const [inpRgVal, setInpRgVal] = React.useState(exValue);\n\n  useEffect(() => {\n    setInpRgVal(exValue)\n  },[exValue])\n\n  const handleClick = (value) => {\n    setInpRgVal(value);\n    const { type, id } = checkboxMsRs;\n    dispatch(\n      updateMsRsvalue({\n        value,\n        type,\n        id: type === irType ? id : null,\n        updateWhole: true\n      })\n    )\n  }\n\n  return (\n    <div className=\"inputRange\">\n      <input \n        type=\"range\"\n        min=\"0\"\n        max={max}\n        step={step}\n        value={inpRgVal}\n        onInput={(e)=> {\n          handleClick(Number(e.target.value))\n        }}\n      />\n    </div>\n  )\n}\n\nexport default InputRange;","import React from 'react';\n\nimport Checkbox from '@mui/material/Checkbox';\n\nimport VegStackAlphaFilter from './VegStackAlphaFilter';\nimport VegetableStack from './VegetableStack';\nimport MoneyStack from './MoneyStack';\nimport MeasureStack from './MeasureStack';\nimport InputRange from './InputRange';\n\nimport { useSelector } from 'react-redux';\n\nconst Footer = () => {\n  const checkboxMsRs = useSelector((state) => state.app.checkboxMsRs);\n  const [rangerCheckbox, setRangerCheckbox] = React.useState(false);\n\n  return (\n    <>\n      {\n        (!checkboxMsRs.id && !checkboxMsRs.type) && (\n          <VegStackAlphaFilter fullWidth={!checkboxMsRs.id || !checkboxMsRs.type ? true : !rangerCheckbox}/>\n        )\n      }\n      {\n        checkboxMsRs.id && (checkboxMsRs.type === \"RS\" || checkboxMsRs.type === \"MS\" || checkboxMsRs.type === \"RSTT\") && (\n          <div className=\"rangerCheckbox\">\n            <Checkbox\n              onClick={(event) => {\n                setRangerCheckbox(event.target.checked)\n              }}\n              color=\"success\"\n              checked={rangerCheckbox}\n            />\n          </div>\n        )\n      }\n\n      <div className=\"footer flexStartContentCenter\">\n        {\n          (!checkboxMsRs.id && !checkboxMsRs.type) && (\n            <VegetableStack/>\n          )\n        }\n        {\n          (checkboxMsRs.id && (checkboxMsRs.type === \"RS\" || checkboxMsRs.type === \"RSTT\")) && (rangerCheckbox ? (\n            <MoneyStack/>\n          ) : (\n            <InputRange type={checkboxMsRs.type} max={300} step={5} exValue={checkboxMsRs.value}/>\n          ))\n        }\n        {\n          (checkboxMsRs.id && checkboxMsRs.type === \"MS\") && (rangerCheckbox ? (\n            <MeasureStack/>\n          ) : (\n            <InputRange type=\"MS\" max={15} step={.5} exValue={checkboxMsRs.value}/>\n          ))\n        }\n      </div>\n    </>\n  )\n}\n\nexport default Footer;","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Box from '@mui/material/Box';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { visuallyHidden } from '@mui/utils';\n\nfunction EnhancedTableHead(props) {\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells } = props;\n  \n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"error\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'select all desserts',\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'center' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n              hideSortIcon={true}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { alpha } from '@mui/material/styles';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\nimport ArrowCircleLeftIcon from '@mui/icons-material/ArrowCircleLeft';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ControlPointOutlinedIcon from '@mui/icons-material/ControlPointOutlined';\nimport RemoveCircleOutlinedIcon from '@mui/icons-material/RemoveCircleOutlined';\nimport ScaleIcon from '@mui/icons-material/Scale';\nimport CurrencyRupeeIcon from '@mui/icons-material/CurrencyRupee';\nimport PlaylistAddCheckIcon from '@mui/icons-material/PlaylistAddCheck';\nimport Box from '@mui/material/Box';\n\nimport Save from '../Save';\nimport { deleteSelectedVeg, selectedVegChangeShopCount, selectedVegUpdateRupees } from '../../appSlice';\n\nconst EnhancedTableToolbar = (props) => {\n\n  const dispatch = useDispatch();\n  const { numSelected } = props;\n\n  const selectedVegetables = useSelector((state) => state.app.selectedVegetables);\n  const [displayData, setDisplayData] = React.useState({\"Measure\": 0, \"Rupees\": 0});\n\n  React.useEffect(() => {\n    if(selectedVegetables.length > 0) {\n      let totalItems = 0;\n      let msTotal = 0;\n      let rsTotal = 0;\n      selectedVegetables.map(({selected, ms, rstt}) => {\n        if(selected) {\n          totalItems += 1;\n          msTotal += ms;\n          rsTotal += rstt;\n        }\n      })\n      setDisplayData({\"Measure\": msTotal, \"Rupees\": rsTotal})\n    }\n  },[selectedVegetables])\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(/* numSelected > 0 &&  */{\n          bgcolor: (theme) =>\n            alpha(theme.palette.error.main, theme.palette.action.activatedOpacity),\n        }),\n        boxShadow: '0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)',\n        minHeight: '36px'\n      }}\n    >\n    <>\n      <Box style={{width:\"40%\", color:\"#222222\", fontSize:\"14px\"}} className=\"flexStartContentCenter\">\n        <PlaylistAddCheckIcon fontSize=\"small\"/> \n        <Typography\n          sx={{ width: '10%', margin: '0 20px 0px 4px' }}\n          color=\"inherit\"\n          variant=\"caption\"\n          // component=\"div\"\n        >\n          {numSelected}\n        </Typography>\n        \n        <ScaleIcon fontSize=\"\"/> \n        <Typography\n          sx={{ width: '10%', margin: '0 20px 0px 4px' }}\n          color=\"inherit\"\n          variant=\"caption\"\n        >\n          {displayData.Measure}\n        </Typography>\n\n        <CurrencyRupeeIcon fontSize=\"\"/> \n        <Typography\n          sx={{ width: '10%', margin: '0 20px 0px 4px' }}\n          color=\"inherit\"\n          variant=\"caption\"\n        >\n          {displayData.Rupees}\n        </Typography>\n      </Box>\n\n      <Box style={{width:\"60%\", color:numSelected>0 ? \"#222222\" : \"#c2c2c2\", fontSize:\"14px\", paddingRight:\"24px\"}} className=\"flexEndContentCenter\">\n        <Save onlySaveIcon={true}/>\n\n        <div className=\"actionIcons\">\n          {numSelected <= 0 && (<div className=\"overLayDisable\">&nbsp;</div>)}\n          <IconButton color=\"inherit\" style={{fontSize:\"16px\", padding: \"0px 5px 0px 0px\"}}>\n            <ArrowCircleLeftIcon fontSize=\"\" onClick={() => {\n              const confirmed = window.confirm(\"Updating Per KG Rupees from Total Rupees !!\");\n              if(confirmed) {\n                dispatch(selectedVegUpdateRupees())\n              }\n            }}/>\n          </IconButton>\n          <IconButton color=\"inherit\" style={{fontSize:\"16px\", padding: \"0px\"}}>\n            <ArrowCircleRightIcon fontSize=\"\" onClick={() => {\n              const confirmed = window.confirm(\"Updating Total Rupees from Per KG Rupees !!\");\n              if(confirmed) {\n                dispatch(selectedVegUpdateRupees(\"total\"))\n              }\n            }}/>\n          </IconButton>\n\n          <IconButton color=\"inherit\" style={{fontSize:\"16px\", color:numSelected>0 ? \"#FF0000\" : \"#c2c2c2\"}}>\n            <DeleteIcon fontSize=\"\" onClick={() => {\n              const confirmed = window.confirm(\"Are you sure ?\");\n              if(confirmed) {\n                dispatch(deleteSelectedVeg())\n              }\n            }}/>\n          </IconButton>\n          {/* <Typography variant=\"caption\" color=\"inherit\" style={{fontSize:\"10px\"}}>\n            SC : \n          </Typography> */}\n          <IconButton color=\"inherit\" style={{fontSize:\"16px\", padding: \"0px 5px 0px 0px\"}}>\n            <ControlPointOutlinedIcon fontSize=\"\" onClick={() => {\n              dispatch(selectedVegChangeShopCount(\"plus\"))\n            }}/>\n          </IconButton>\n          <IconButton color=\"inherit\" style={{fontSize:\"16px\", padding: \"0px\"}}>\n            <RemoveCircleOutlinedIcon fontSize=\"\" onClick={() => {\n              dispatch(selectedVegChangeShopCount(\"minus\"))\n            }}/>\n          </IconButton>\n        </div>\n      </Box>\n    </>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableToolbar;","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\n\nimport EnhancedTableHead from './EnhancedTableHead';\nimport EnhancedTableToolbar from './EnhancedTableToolbar';\n\nimport { getComparator, stableSort } from '../../utils';\nimport { updateMeasureCheckBox, updateRsCheckBox, selectedVegToggleChecked, selectedVegAllToggleChecked, updateRsTtCheckBox } from '../../appSlice';\n\nfunction EnhancedTable({rows, headCells}) {\n  const dispatch = useDispatch();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('');\n\n  const checkboxMsRs = useSelector((state) => state.app.checkboxMsRs);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const selected = rows.filter((rowD) => rowD.selected).length;\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Paper sx={{ width: '100%', mb: 2 }}>\n        {\n          // selected > 0 && (\n            <EnhancedTableToolbar numSelected={selected} />\n          // )\n        }\n        <TableContainer>\n          <Table\n            sx={{ minWidth: '100%' }}\n            aria-labelledby=\"tableTitle\"\n            size={'small'}\n          >\n            <EnhancedTableHead\n              numSelected={selected}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={(event) => {\n                dispatch(\n                  selectedVegAllToggleChecked(event.target.checked)\n                )\n              }}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n              headCells={headCells}\n            />\n            <TableBody>\n              {\n                stableSort(rows, getComparator(order, orderBy))\n                .map((row, index) => {\n                  // const isItemSelected = isSelected(row.id);\n                  const isItemSelected = row.selected;\n                  const isItemSelected2 = checkboxMsRs.type === \"MS\" ? checkboxMsRs.id === row.id : false;\n                  const isItemSelected3 = checkboxMsRs.type === \"RS\" ? checkboxMsRs.id === row.id : false;\n                  const isItemSelected4 = checkboxMsRs.type === \"RSTT\" ? checkboxMsRs.id === row.id : false;\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.id}\n                      selected={isItemSelected}\n                      className=\"selectedVegTable\"\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          // onClick={(event) => firstCheckboxOnClick(event, row.id)}\n                          onClick={(event) => {\n                            dispatch(\n                              selectedVegToggleChecked({id: row.id, selected: event.target.checked})\n                            )\n                          }}\n                          color=\"error\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            'aria-labelledby': labelId,\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.value}\n                      </TableCell>\n                      <TableCell align=\"center\" padding=\"none\">\n                        {row.shop}\n                      </TableCell>\n                      <TableCell align=\"center\" className=\"measure-cell\">\n                        {row.ms}\n                      {/* </TableCell>\n                      <TableCell padding=\"none\"> */}\n                        <Checkbox\n                          onClick={(event) => {\n                            const vals = event.target.checked ? row.id : null;\n                            dispatch(updateMeasureCheckBox({id: vals, value: row.ms}))\n                          }}\n                          color=\"primary\"\n                          checked={isItemSelected2}\n                          inputProps={{\n                            'aria-labelledby': labelId,\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell align=\"center\" className=\"rupees-cell\">\n                        {row.rs}\n                      {/* </TableCell>\n                      <TableCell padding=\"none\"> */}\n                        <Checkbox\n                          onClick={(event) => {\n                            const vals = event.target.checked ? row.id : null;\n                            dispatch(updateRsCheckBox({id: vals, value: row.rs}))\n                          }}\n                          color=\"primary\"\n                          checked={isItemSelected3}\n                          inputProps={{\n                            'aria-labelledby': labelId,\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell align=\"center\" className=\"rupees-total-cell\">\n                        {row.rstt}\n                        <Checkbox\n                          onClick={(event) => {\n                            const vals = event.target.checked ? row.id : null;\n                            dispatch(updateRsTtCheckBox({id: vals, value: row.rstt}))\n                          }}\n                          color=\"primary\"\n                          checked={isItemSelected4}\n                          inputProps={{\n                            'aria-labelledby': labelId,\n                          }}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </Box>\n  );\n}\n\nexport default EnhancedTable;","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ScaleIcon from '@mui/icons-material/Scale';\nimport CurrencyRupeeIcon from '@mui/icons-material/CurrencyRupee';\nimport ShoppingBagIcon from '@mui/icons-material/ShoppingBag';\nimport StorefrontIcon from '@mui/icons-material/Storefront';\n\nimport EnhancedTable from './Table/EnhancedTable';\n// import { checkBoxhandleClicks } from '../utils';\n// import { updateMeasureCheckBox, updateRsCheckBox } from '../appSlice';\n\n/* headCells `id` value should match with selectedVeg object Key for sorting */\nconst headCells = [\n  {\n    id: 'value',\n    numeric: false,\n    disablePadding: true,\n    label: <ShoppingBagIcon/>,\n  },\n  {\n    id: 'shop',\n    numeric: true,\n    disablePadding: false,\n    label: <StorefrontIcon/>,\n  },\n  {\n    id: 'ms',\n    numeric: true,\n    disablePadding: false,\n    label: <ScaleIcon/>,\n  },\n  /* {\n    id: '-',\n    numeric: false,\n    disablePadding: false,\n    label: '#',\n  }, */\n  {\n    id: 'rs', \n    numeric: true,\n    disablePadding: false,\n    label: <CurrencyRupeeIcon/>,\n  },\n  {\n    id: 'rstt', \n    numeric: true,\n    disablePadding: false,\n    label: <><CurrencyRupeeIcon/><CurrencyRupeeIcon/></>,\n  },\n  /* {\n    id: '-',\n    numeric: false,\n    disablePadding: false,\n    label: '#',\n  } */\n];\n\nconst SelectedVeg = () => {\n  const selectedVegetables = useSelector((state) => state.app.selectedVegetables);\n\n  return (\n    <>\n      <EnhancedTable\n        rows={selectedVegetables}\n        headCells={headCells}\n      />\n    </>\n  )\n}\n\nexport default SelectedVeg;","import React from 'react';\n\nimport SelectedVeg from './SelectedVeg';\n\nconst Body = () => {\n  return (\n    <div className=\"body flexStart\">\n      <SelectedVeg/>\n    </div>\n  )\n}\n\nexport default Body;","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\n\nimport Header from './Header';\nimport Footer from './Footer';\nimport Body from './Body';\nimport { setVegStack } from '../appSlice';\n\nconst Appcontainer = () => {\n  const dispatch = useDispatch();\n\n  const vegetables = useSelector((state) => state.app.vegetables);\n\n  React.useMemo(() => {\n    dispatch(setVegStack())\n  },[vegetables])\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container fixed className=\"app_container\">\n        <Box className=\"boxWrapper\">\n          <Header/>\n          <Body/>\n          <Footer/>\n        </Box>\n      </Container>\n    </React.Fragment>\n  )\n}\n\nexport default Appcontainer;","import * as React from 'react';\n\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nimport Appcontainer from './components/Appcontainer';\n\nimport './styles.css';\n\nexport default function FixedContainer() {\n  return (\n    <Provider store={store}>\n      <Appcontainer />\n    </Provider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}